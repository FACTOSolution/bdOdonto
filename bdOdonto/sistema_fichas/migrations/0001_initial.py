# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-09-09 04:54
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Aluno',
            fields=[
                ('matricula', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Atendimento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Dados_Dentes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('letra', models.CharField(max_length=3)),
                ('dente', models.PositiveIntegerField(null=True)),
                ('rec', models.PositiveIntegerField()),
                ('placa', models.BooleanField()),
                ('ps', models.PositiveIntegerField()),
                ('ig', models.BooleanField()),
                ('pic', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Ficha_Dentistica',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('motivo_consulta', models.CharField(blank=True, max_length=20, null=True)),
                ('ultima_consulta', models.CharField(blank=True, max_length=10, null=True)),
                ('escova_dentes', models.CharField(choices=[('1x', '1x'), ('2x', '2x'), ('3x', '3x')], max_length=20)),
                ('horario_escovacao', models.CharField(blank=True, max_length=20, null=True)),
                ('usa_fio_dental', models.CharField(blank=True, max_length=10, null=True)),
                ('diario_alimentar', models.CharField(blank=True, max_length=30, null=True)),
                ('frequencia_consumo_acucar', models.CharField(choices=[('3x ao dia', '3x ao dia'), ('5x ao dia', '5x ao dia'), ('>5x ao dia', '>5x ao dia')], max_length=20)),
                ('horario_consumo_acucar', models.CharField(choices=[('Junto Ã\xa0s refeiÃ§Ãµes', 'Junto Ã\xa0s refeiÃ§Ãµes'), ('Intervalos entre refeiÃ§Ãµes', 'Intervalos entre refeiÃ§Ãµes'), ('Junto Ã\xa0s refeiÃ§Ãµes e nos intervalos das mesmas', 'Junto Ã\xa0s refeiÃ§Ãµes e nos intervalos das mesmas')], max_length=20)),
                ('toma_medicamento', models.CharField(blank=True, max_length=20, null=True)),
                ('fluxo_salivar', models.CharField(blank=True, max_length=10, null=True)),
                ('caracteristica_da_placa1', models.CharField(choices=[('Flocular e pegajosa', 'Flocular e pegajosa'), ('Calcificada', 'Calcificada')], max_length=30, null=True)),
                ('caracteristica_da_placa2', models.CharField(choices=[('Flocular e pegajosa', 'Flocular e pegajosa'), ('Calcificada', 'Calcificada')], max_length=30, null=True)),
                ('diag_risco_carie', models.CharField(choices=[('Alto', 'Alto'), ('Médio', 'Médio'), ('Baixo', 'Baixo')], max_length=20)),
                ('orientacao', models.BooleanField()),
                ('evidenciacao_de_placa', models.BooleanField()),
                ('profilaxia', models.BooleanField()),
                ('fosfato', models.BooleanField()),
                ('sodio', models.BooleanField()),
                ('fluoreto', models.BooleanField()),
                ('clorexidina', models.BooleanField()),
                ('aquosa_digluconato', models.BooleanField()),
                ('selamento_fissuras', models.CharField(blank=True, max_length=20, null=True)),
                ('remineralizacao_de_lesoes_de_carie', models.CharField(blank=True, max_length=20, null=True)),
                ('outra_medida', models.CharField(blank=True, max_length=20, null=True)),
                ('restauracoes_provisorias', models.CharField(blank=True, max_length=20, null=True)),
                ('tratamento_expectante', models.CharField(blank=True, max_length=20, null=True)),
                ('restauracoes_com_amalgama', models.CharField(blank=True, max_length=20, null=True)),
                ('restauracao_com_resina', models.CharField(blank=True, max_length=20, null=True)),
                ('radiografias', models.CharField(blank=True, max_length=20, null=True)),
                ('observacoes_dentistica', models.CharField(blank=True, max_length=20, null=True)),
                ('encaminhamento_para', models.CharField(blank=True, max_length=20, null=True)),
                ('atendimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_fichas.Atendimento')),
            ],
        ),
        migrations.CreateModel(
            name='Ficha_Diagnostico',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateTimeField(default=django.utils.timezone.now)),
                ('motivo', models.CharField(max_length=200)),
                ('historia', models.TextField()),
                ('ultima_consulta', models.DateTimeField(blank=True, null=True)),
                ('frequencia_consultas', models.CharField(max_length=200)),
                ('higiene_propria', models.CharField(max_length=200)),
                ('frequencia_escova', models.PositiveIntegerField()),
                ('dentes_sensiveis', models.BooleanField()),
                ('sangramento_gengiva', models.BooleanField()),
                ('morde_objetos', models.BooleanField()),
                ('mobilidade', models.BooleanField()),
                ('protese', models.BooleanField()),
                ('range_dentes', models.BooleanField()),
                ('dificuldade_abrir', models.BooleanField()),
                ('estalido', models.BooleanField()),
                ('boca_seca', models.BooleanField()),
                ('sol_frequente', models.BooleanField()),
                ('tabagismo', models.BooleanField()),
                ('tipo_tabagismo', models.CharField(blank=True, max_length=200, null=True)),
                ('duracao_tabagismo', models.CharField(blank=True, max_length=200, null=True)),
                ('frequencia_tabagismo', models.CharField(blank=True, max_length=200, null=True)),
                ('tempo_abandono_tabagismo', models.CharField(blank=True, max_length=200, null=True)),
                ('alcool', models.BooleanField()),
                ('frequencia_alcool', models.CharField(blank=True, max_length=200, null=True)),
                ('drogas_ilicitas', models.BooleanField()),
                ('def_drogas_ilicitas', models.CharField(blank=True, max_length=200, null=True)),
                ('tratamento_medico', models.BooleanField()),
                ('def_tratamento_medico', models.CharField(blank=True, max_length=200, null=True)),
                ('medicacao', models.BooleanField()),
                ('def_medicacao', models.CharField(blank=True, max_length=200, null=True)),
                ('doenca_grave', models.BooleanField()),
                ('def_doenca_grave', models.CharField(blank=True, max_length=200, null=True)),
                ('cirurgia', models.BooleanField()),
                ('def_cirurgia', models.CharField(blank=True, max_length=200, null=True)),
                ('anticoncepcional', models.BooleanField()),
                ('gravida', models.BooleanField()),
                ('tempo_gravidez', models.CharField(blank=True, max_length=200, null=True)),
                ('alergia', models.BooleanField()),
                ('def_alergia', models.CharField(blank=True, max_length=200, null=True)),
                ('reacao_medicamento', models.BooleanField()),
                ('def_reacao_medicamento', models.CharField(blank=True, max_length=200, null=True)),
                ('anestesia_dentaria', models.BooleanField()),
                ('reacao_anestesia_dentaria', models.CharField(blank=True, max_length=200, null=True)),
                ('anestesia_geral', models.BooleanField()),
                ('reacao_anestesia_geral', models.CharField(blank=True, max_length=200, null=True)),
                ('disturbios_respiratorios', models.BooleanField()),
                ('disturbios_respiratorios_abaixo', models.CharField(blank=True, choices=[('Pneumonia', 'Pneumonia'), ('Sinusite', 'Sinusite'), ('Rinite', 'Rinite'), ('Bronquite', 'Bronquite'), ('Asma', 'Asma'), ('Outro', 'Outro')], max_length=15, null=True)),
                ('disturbios_respiratorios_outro', models.CharField(blank=True, max_length=15, null=True)),
                ('hipertenso', models.BooleanField()),
                ('pressao_arterial', models.CharField(blank=True, max_length=200, null=True)),
                ('sangramento_excesso', models.BooleanField()),
                ('palpitacao', models.BooleanField()),
                ('falta_ar', models.BooleanField()),
                ('pes_inchados', models.BooleanField()),
                ('febre_reumatica', models.BooleanField()),
                ('problema_cardiovascular', models.BooleanField()),
                ('def_problema_cardiovascular', models.CharField(blank=True, max_length=200, null=True)),
                ('doencas_transmissiveis', models.BooleanField()),
                ('doencas_transmissiveis_abaixo', models.CharField(blank=True, choices=[('Pneumonia', 'Pneumonia'), ('Sinusite', 'Sinusite'), ('Rinite', 'Rinite'), ('Bronquite', 'Bronquite'), ('Asma', 'Asma'), ('Outro', 'Outro')], max_length=15, null=True)),
                ('doencas_transmissiveis_hepatite', models.CharField(blank=True, max_length=5, null=True)),
                ('doencas_transmissiveis_outro', models.CharField(blank=True, max_length=15, null=True)),
                ('virus', models.BooleanField()),
                ('def_virus', models.CharField(blank=True, max_length=200, null=True)),
                ('diabetes', models.BooleanField()),
                ('cicatrizacao_demorada', models.BooleanField()),
                ('perda_peso', models.BooleanField()),
                ('aumento_freq_urina', models.BooleanField()),
                ('desmaios', models.BooleanField()),
                ('convulsoes', models.BooleanField()),
                ('epilepsia', models.BooleanField()),
                ('disturbio_sanguineo', models.BooleanField()),
                ('def_disturbio_sanguineo', models.CharField(blank=True, max_length=200, null=True)),
                ('outro_problema', models.BooleanField()),
                ('def_outro_problema', models.CharField(blank=True, max_length=200, null=True)),
                ('face', models.TextField()),
                ('atm', models.TextField()),
                ('m_mastigatorios', models.TextField()),
                ('g_salivares', models.TextField()),
                ('g_linfaticos', models.TextField()),
                ('labios', models.TextField()),
                ('mucosa_j', models.TextField()),
                ('gengiva', models.TextField()),
                ('soalho_boca', models.TextField()),
                ('lingua', models.TextField()),
                ('palato', models.TextField()),
                ('orofaringe', models.TextField()),
                ('percussao', models.TextField()),
                ('exames_complementares', models.TextField()),
                ('necessidade_perio', models.TextField(null=True)),
                ('necessidade_cirurgia', models.TextField(null=True)),
                ('necessidade_endo', models.TextField(null=True)),
                ('necessidade_dentistica', models.TextField(null=True)),
                ('necessidade_protese', models.TextField(null=True)),
                ('disc', models.CharField(choices=[('Estágio I', 'Estágio I'), ('Estágio II', 'Estágio II'), ('Estágio III', 'Estágio III'), ('EstágioIV', 'Estágio IV'), ('Outro', 'Outro')], max_length=15, null=True)),
                ('disc_outro', models.CharField(blank=True, max_length=20, null=True)),
                ('atendimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_fichas.Atendimento')),
            ],
        ),
        migrations.CreateModel(
            name='Ficha_Endodontia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('em_tratamento_med', models.CharField(choices=[('Sim', 'Sim'), ('NÃ£o', 'NÃ£o'), ('NÃ£o sei', 'NÃ£o sei')], max_length=15)),
                ('quanto_tempo', models.CharField(blank=True, max_length=10, null=True)),
                ('alguma_cirurgia', models.CharField(blank=True, max_length=50, null=True)),
                ('diabetes', models.CharField(choices=[('Sim', 'Sim'), ('NÃ£o', 'NÃ£o'), ('NÃ£o sei', 'NÃ£o sei')], max_length=15)),
                ('febre_reumatica', models.CharField(choices=[('Sim', 'Sim'), ('NÃ£o', 'NÃ£o'), ('NÃ£o sei', 'NÃ£o sei')], max_length=15)),
                ('alteracoes_sanguineas', models.CharField(choices=[('Sim', 'Sim'), ('NÃ£o', 'NÃ£o'), ('NÃ£o sei', 'NÃ£o sei')], max_length=15)),
                ('doencas_cardiovasculares', models.CharField(choices=[('Sim', 'Sim'), ('NÃ£o', 'NÃ£o'), ('NÃ£o sei', 'NÃ£o sei')], max_length=15)),
                ('problemas_hemorragicos', models.CharField(choices=[('Sim', 'Sim'), ('NÃ£o', 'NÃ£o'), ('NÃ£o sei', 'NÃ£o sei')], max_length=15)),
                ('hipertensao', models.CharField(choices=[('Sim', 'Sim'), ('NÃ£o', 'NÃ£o'), ('NÃ£o sei', 'NÃ£o sei')], max_length=15)),
                ('marcapasso', models.CharField(choices=[('Sim', 'Sim'), ('NÃ£o', 'NÃ£o'), ('NÃ£o sei', 'NÃ£o sei')], max_length=15)),
                ('gravida', models.CharField(choices=[('Sim', 'Sim'), ('NÃ£o', 'NÃ£o'), ('NÃ£o sei', 'NÃ£o sei')], max_length=15)),
                ('tempo_gravidez', models.CharField(blank=True, max_length=10, null=True)),
                ('hepatite', models.CharField(choices=[('Sim', 'Sim'), ('NÃ£o', 'NÃ£o'), ('NÃ£o sei', 'NÃ£o sei')], max_length=15)),
                ('tempo_hepatite', models.CharField(blank=True, max_length=10, null=True)),
                ('tipo_hepatite', models.CharField(blank=True, max_length=15, null=True)),
                ('uso_de_medicamento', models.CharField(blank=True, max_length=50, null=True)),
                ('uso_continuo_de_medicamento', models.CharField(blank=True, max_length=50, null=True)),
                ('alergia', models.CharField(choices=[('Sim', 'Sim'), ('NÃ£o', 'NÃ£o'), ('NÃ£o sei', 'NÃ£o sei')], max_length=15)),
                ('outras_informacoes', models.CharField(blank=True, max_length=100, null=True)),
                ('historia_dental', models.CharField(blank=True, max_length=100, null=True)),
                ('caracteristicas_da_dor', models.CharField(blank=True, max_length=60, null=True)),
                ('uso_analgesicos', models.BooleanField()),
                ('uso_antiinflamatorios', models.BooleanField()),
                ('uso_antibiotico', models.BooleanField()),
                ('dente', models.PositiveIntegerField()),
                ('dor_frio', models.BooleanField()),
                ('dor_calor', models.BooleanField()),
                ('dor_percussao_vertical', models.BooleanField()),
                ('dor_percusao_horizontal', models.BooleanField()),
                ('dor_palpacao_apical', models.BooleanField()),
                ('camara_normal', models.BooleanField()),
                ('camara_calcificada', models.BooleanField()),
                ('camara_com_perfuracao', models.BooleanField()),
                ('camara_com_reabsorcao_interna', models.BooleanField()),
                ('canal_amplo', models.BooleanField()),
                ('canal_atresiado', models.BooleanField()),
                ('canal_ja_manipulado', models.BooleanField()),
                ('canal_obturacao_deficiente', models.BooleanField()),
                ('canal_rizogenese_incompleta', models.BooleanField()),
                ('canal_instrumento_fraturado', models.BooleanField()),
                ('canal_fratura_radicular', models.BooleanField()),
                ('canal_sobre_obturacao', models.BooleanField()),
                ('canal_reabsorcao_apical', models.BooleanField()),
                ('canal_reabsorcao_externa', models.BooleanField()),
                ('canal_reabsorcao_interna', models.BooleanField()),
                ('canal_perfuracao', models.BooleanField()),
                ('pericemento_normal', models.BooleanField()),
                ('pericemento_espessado', models.BooleanField()),
                ('pericemento_hipercementose', models.BooleanField()),
                ('periapice_osteite_rarefaciente_difusa', models.BooleanField()),
                ('periapice_osteite_rarefaciente_circunscrita', models.BooleanField()),
                ('diag_clinico_provavel', models.CharField(max_length=100)),
                ('atendimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_fichas.Atendimento')),
            ],
        ),
        migrations.CreateModel(
            name='Ficha_Endodontia_Tabela',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dente1', models.PositiveIntegerField(blank=True, null=True)),
                ('canal1', models.CharField(blank=True, max_length=20, null=True)),
                ('ponto_referencia1', models.CharField(blank=True, max_length=5, null=True)),
                ('cad1', models.PositiveIntegerField(blank=True, null=True)),
                ('ctp1', models.PositiveIntegerField(blank=True, null=True)),
                ('crt1', models.PositiveIntegerField(blank=True, null=True)),
                ('iai1', models.PositiveIntegerField(blank=True, null=True)),
                ('iaf1', models.PositiveIntegerField(blank=True, null=True)),
                ('im1', models.PositiveIntegerField(blank=True, null=True)),
                ('dente2', models.PositiveIntegerField(blank=True, null=True)),
                ('canal2', models.CharField(blank=True, max_length=20, null=True)),
                ('ponto_referencia2', models.CharField(blank=True, max_length=5, null=True)),
                ('cad2', models.PositiveIntegerField(blank=True, null=True)),
                ('ctp2', models.PositiveIntegerField(blank=True, null=True)),
                ('crt2', models.PositiveIntegerField(blank=True, null=True)),
                ('iai2', models.PositiveIntegerField(blank=True, null=True)),
                ('iaf2', models.PositiveIntegerField(blank=True, null=True)),
                ('im2', models.PositiveIntegerField(blank=True, null=True)),
                ('dente3', models.PositiveIntegerField(blank=True, null=True)),
                ('canal3', models.CharField(blank=True, max_length=20, null=True)),
                ('ponto_referencia3', models.CharField(blank=True, max_length=5, null=True)),
                ('cad3', models.PositiveIntegerField(blank=True, null=True)),
                ('ctp3', models.PositiveIntegerField(blank=True, null=True)),
                ('crt3', models.PositiveIntegerField(blank=True, null=True)),
                ('iai3', models.PositiveIntegerField(blank=True, null=True)),
                ('iaf3', models.PositiveIntegerField(blank=True, null=True)),
                ('im3', models.PositiveIntegerField(blank=True, null=True)),
                ('atendimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_fichas.Atendimento')),
            ],
        ),
        migrations.CreateModel(
            name='Ficha_Ortodontia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('queixa', models.CharField(max_length=200)),
                ('cor', models.CharField(choices=[('Branca', 'Branca'), ('Negra', 'Negra'), ('Amarela', 'Amarela'), ('Parda', 'Parda')], max_length=10)),
                ('doencas', models.CharField(choices=[('Não relata', 'Não relata'), ('Habituais', 'Habituais'), ('Outras', 'Outras')], max_length=10)),
                ('alergias', models.BooleanField()),
                ('def_alergias', models.CharField(blank=True, max_length=20, null=True)),
                ('operacao', models.BooleanField()),
                ('estado_saude', models.CharField(choices=[('Bom', 'Bom'), ('Regular', 'Regular'), ('Deficiente', 'Deficiente')], max_length=15)),
                ('traumatismo', models.BooleanField()),
                ('data_traumatismo', models.CharField(blank=True, max_length=10, null=True)),
                ('vontade_correcao', models.CharField(choices=[('Sim', 'Sim'), ('Não', 'Não'), ('Não sabe', 'Não sabe')], max_length=15)),
                ('aparelho', models.BooleanField()),
                ('tempo_aparelho', models.CharField(blank=True, max_length=10, null=True)),
                ('observacoes_anamnese', models.TextField()),
                ('psicologico', models.CharField(choices=[('Normal', 'Normal'), ('Extrovertido', 'Extrovertido'), ('Introvertido', 'Introvertido')], max_length=15)),
                ('simetria_facial', models.BooleanField()),
                ('tipo_facial', models.CharField(choices=[('Dolicofacial', 'Dolicofacial'), ('Mesofacial', 'Mesofacial'), ('Braquifacial', 'Braquifacial')], max_length=16)),
                ('selamento_labial_frontal', models.BooleanField()),
                ('relacao_ls', models.CharField(choices=[('Normal', 'Normal'), ('Diminuído', 'Diminuído'), ('Aumentado', 'Aumentado')], max_length=15)),
                ('espessura', models.CharField(choices=[('Normal', 'Normal'), ('Diminuído', 'Diminuído'), ('Aumentado', 'Aumentado')], max_length=15)),
                ('tonicidade_labial', models.CharField(choices=[('Normal', 'Normal'), ('Diminuído', 'Diminuído'), ('Aumentado', 'Aumentado')], max_length=15)),
                ('tonicidade_mentoniano', models.CharField(choices=[('Normal', 'Normal'), ('Diminuído', 'Diminuído'), ('Aumentado', 'Aumentado')], max_length=15)),
                ('zigomatico_frontal', models.CharField(choices=[('Normal', 'Normal'), ('Diminuído', 'Diminuído'), ('Aumentado', 'Aumentado')], max_length=15)),
                ('observacoes_frontal', models.TextField()),
                ('simetria_sorriso', models.BooleanField()),
                ('qtd_gengiva_incisos', models.CharField(choices=[('Normal', 'Normal'), ('Diminuído', 'Diminuído'), ('Aumentado', 'Aumentado')], max_length=15)),
                ('corredor_bucal', models.CharField(choices=[('Normal', 'Normal'), ('Diminuído', 'Diminuído'), ('Aumentado', 'Aumentado')], max_length=15)),
                ('observacoes_frontal_sorrindo', models.TextField()),
                ('perfil', models.CharField(choices=[('Reto', 'Reto'), ('Côncavo', 'Côncavo'), ('Convexo', 'Convexo')], max_length=15)),
                ('dimensao', models.CharField(choices=[('1/3 faciais proporcionais', '1/3 faciais proporcionais'), ('1/3 inf. aumentado', '1/3 inf. aumentado'), ('1/3 inf. diminuido', '1/3 inf. diminuido')], max_length=30)),
                ('nariz', models.CharField(choices=[('Normal', 'Normal'), ('Pequeno', 'Pequeno'), ('Grande', 'Grande')], max_length=15)),
                ('selamento_labial_perfil', models.BooleanField()),
                ('maxila', models.CharField(choices=[('Normal', 'Normal'), ('Prostruída', 'Prostruída'), ('Retruída', 'Retruída')], max_length=15)),
                ('zigomatico_perfil', models.CharField(choices=[('Normal', 'Normal'), ('Ausente', 'Ausente'), ('Proeminente', 'Proeminente')], max_length=15)),
                ('angulo_nasolabial', models.CharField(choices=[('Normal', 'Normal'), ('Fechado', 'Fechado'), ('Aberto', 'Aberto')], max_length=15)),
                ('posicao_labio_superior', models.CharField(choices=[('Normal', 'Normal'), ('Curto', 'Curto'), ('Longo', 'Longo')], max_length=15)),
                ('posicao_labio_inferior', models.CharField(choices=[('Normal', 'Normal'), ('Eversão', 'Eversão')], max_length=15)),
                ('mandibula', models.CharField(choices=[('Normal', 'Normal'), ('Prostruída', 'Prostruída'), ('Retruída', 'Retruída')], max_length=15)),
                ('qtd_mento', models.CharField(choices=[('Normal', 'Normal'), ('Deficiente', 'Deficiente'), ('Proeminente', 'Proeminente')], max_length=15)),
                ('sulco_mentolabial', models.CharField(choices=[('Normal', 'Normal'), ('Diminuído', 'Diminuído'), ('Aumentado', 'Aumentado')], max_length=15)),
                ('observacoes_perfil', models.TextField()),
                ('respiracao', models.CharField(choices=[('Nasal', 'Nasal'), ('Bucal', 'Bucal'), ('Naso-Bucal', 'Naso-Bucal')], max_length=15)),
                ('degluticao', models.CharField(choices=[('Normal', 'Normal'), ('Atípica', 'Atípica')], max_length=15)),
                ('fonacao', models.CharField(choices=[('Normal', 'Normal'), ('Atipica', 'Atípica')], max_length=15)),
                ('habitos', models.CharField(choices=[('Não relata', 'Não relata'), ('Sucção', 'Sucção'), ('Interposição labial', 'Interposição labial'), ('Interposição', 'Interposição'), ('Onicofagia', 'Onicofagia'), ('Outros', 'Outros')], max_length=25)),
                ('habitos_outros', models.CharField(max_length=20)),
                ('atm', models.TextField()),
                ('observacoes_funcional', models.TextField()),
                ('dentadura', models.CharField(choices=[('Decidua', 'DecÃ\xaddua'), ('Mista(1o Transit.)', 'Mista(1o Transit.)'), ('Mista(2o Transit.)', 'Mista(2o Transit.)'), ('Mista(Intertransit.)', 'Mista(Intertransit.)'), ('Permanente', 'Permanente'), ('Arco Tipo I', 'Arco Tipo I'), ('Arco Tipo II', 'Arco Tipo II')], max_length=25)),
                ('erupcao_dentaria', models.CharField(choices=[('Normal', 'Normal'), ('Precoce', 'Precoce'), ('Tardia', 'Tardia')], max_length=15)),
                ('arco_superior', models.CharField(choices=[('Normal', 'Normal'), ('Amplo', 'Amplo'), ('AtrÃ©sico', 'AtrÃ©sico')], max_length=15)),
                ('arco_inferior', models.CharField(choices=[('Normal', 'Normal'), ('Amplo', 'Amplo'), ('AtrÃ©sico', 'AtrÃ©sico')], max_length=15)),
                ('linha_med_sup', models.CharField(choices=[('Normal', 'Normal'), ('Desvio p/ direita', 'Desvio p/ direita'), ('Desvio p/ esquerda', 'Desvio p/ esquerda')], max_length=20)),
                ('linha_med_inf', models.CharField(choices=[('Normal', 'Normal'), ('Desvio p/ direita', 'Desvio p/ direita'), ('Desvio p/ esquerda', 'Desvio p/ esquerda')], max_length=20)),
                ('trespasse_horizontal', models.CharField(choices=[('Normal', 'Normal'), ('Aumentado', 'Aumentado'), ('Negativo', 'Negativo')], max_length=15)),
                ('trespasse_vertical', models.CharField(choices=[('Normal', 'Normal'), ('Aumentado', 'Aumentado'), ('Topo', 'Topo'), ('Mordida aberta', 'Mordida aberta'), ('Dentoalveolar', 'Dentoalveolar'), ('EsquelÃ©tica', 'EsquelÃ©tica')], max_length=17)),
                ('mordida_cruzada', models.CharField(choices=[('Ausente', 'Ausente'), ('Anterior', 'Anterior'), ('Unilateral Verdadeira', 'Unilateral Verdadeira'), ('Unilateral Funcional', 'Unilateral Funcional'), ('Bilateral', 'Bilateral'), ('Localizada', 'Localizada')], max_length=17)),
                ('spee_sup', models.CharField(choices=[('Normal', 'Normal'), ('Acentuada', 'Acentuada')], max_length=15)),
                ('spee_inf', models.CharField(choices=[('Normal', 'Normal'), ('Acentuada', 'Acentuada')], max_length=15)),
                ('relacao_caninos_dir', models.CharField(choices=[('Classe I', 'Classe I'), ('Classe II', 'Classe II'), ('Classe III', 'Classe III')], max_length=15)),
                ('relacao_caninos_esq', models.CharField(choices=[('Classe I', 'Classe I'), ('Classe II', 'Classe II'), ('Classe III', 'Classe III')], max_length=15)),
                ('relacao_molares_dir', models.CharField(choices=[('Classe I', 'Classe I'), ('Classe II', 'Classe II'), ('Classe III', 'Classe III')], max_length=15)),
                ('relacao_molares_esq', models.CharField(choices=[('Classe I', 'Classe I'), ('Classe II', 'Classe II'), ('Classe III', 'Classe III')], max_length=15)),
                ('angle', models.CharField(choices=[('Classe I', 'Classe I'), ('Classe II, 1a', 'Classe II, 1a'), ('Classe II, 2a', 'Classe II, 2a'), ('Classe III', 'Classe III'), ('Subdiv. direita', 'Subdiv. direita'), ('Subdiv. esquerda', 'Subdiv. esquerda')], max_length=15)),
                ('andrews', models.CharField(choices=[('Classe I', 'Classe I'), ('Classe II', 'Classe II'), ('Classe III', 'Classe III'), ('1/4', '1/4'), ('1/2', '1/2'), ('3/4', '3/4'), ('Total', 'Total')], max_length=15)),
                ('diagnostico', models.CharField(choices=[('OclusÃ£o normal', 'OclusÃ£o normal'), ('MÃ¡ oclusÃ£o', 'MÃ¡ oclusÃ£o')], max_length=20)),
                ('observacoes_oclusal', models.TextField()),
                ('observacoes_odontograma', models.TextField()),
                ('atendimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_fichas.Atendimento')),
            ],
        ),
        migrations.CreateModel(
            name='Ficha_Periodontia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sangramento_gengiva', models.CharField(choices=[('Sim', 'Sim'), ('NÃ£o', 'NÃ£o'), ('NÃ£o sei', 'NÃ£o sei')], max_length=10)),
                ('tratamento_gengiva', models.CharField(choices=[('Sim', 'Sim'), ('NÃ£o', 'NÃ£o'), ('NÃ£o sei', 'NÃ£o sei')], max_length=10)),
                ('hemorragia_extrac_dentes', models.CharField(choices=[('Sim', 'Sim'), ('NÃ£o', 'NÃ£o'), ('NÃ£o sei', 'NÃ£o sei')], max_length=10)),
                ('aparelho_ortodontico', models.BooleanField()),
                ('alergia_anestesia', models.CharField(choices=[('Sim', 'Sim'), ('NÃ£o', 'NÃ£o'), ('NÃ£o sei', 'NÃ£o sei')], max_length=10)),
                ('alergia_antibioticos', models.CharField(choices=[('Sim', 'Sim'), ('NÃ£o', 'NÃ£o'), ('NÃ£o sei', 'NÃ£o sei')], max_length=10)),
                ('alergia_sulfas', models.CharField(choices=[('Sim', 'Sim'), ('NÃ£o', 'NÃ£o'), ('NÃ£o sei', 'NÃ£o sei')], max_length=10)),
                ('alergia_aspirina', models.CharField(choices=[('Sim', 'Sim'), ('NÃ£o', 'NÃ£o'), ('NÃ£o sei', 'NÃ£o sei')], max_length=10)),
                ('alergia_outros', models.CharField(blank=True, max_length=20, null=True)),
                ('alergia_nao_medicamentos', models.CharField(choices=[('Sim', 'Sim'), ('NÃ£o', 'NÃ£o'), ('NÃ£o sei', 'NÃ£o sei')], max_length=10)),
                ('quais_alergias', models.CharField(blank=True, max_length=20, null=True)),
                ('cuidados_medicos', models.BooleanField()),
                ('motivo_cuidados_medicos', models.CharField(blank=True, max_length=20, null=True)),
                ('medicamentos', models.BooleanField()),
                ('quais_medicamentos', models.CharField(blank=True, max_length=20, null=True)),
                ('febre_reumatica', models.CharField(choices=[('Sim', 'Sim'), ('NÃ£o', 'NÃ£o'), ('NÃ£o sei', 'NÃ£o sei')], max_length=10)),
                ('doencas_cardiovasculares', models.CharField(choices=[('Sim', 'Sim'), ('NÃ£o', 'NÃ£o'), ('NÃ£o sei', 'NÃ£o sei')], max_length=10)),
                ('diabetes', models.CharField(choices=[('Sim', 'Sim'), ('NÃ£o', 'NÃ£o'), ('NÃ£o sei', 'NÃ£o sei')], max_length=10)),
                ('tonturas', models.CharField(choices=[('Sim', 'Sim'), ('NÃ£o', 'NÃ£o'), ('NÃ£o sei', 'NÃ£o sei')], max_length=10)),
                ('anemia', models.CharField(choices=[('Sim', 'Sim'), ('NÃ£o', 'NÃ£o'), ('NÃ£o sei', 'NÃ£o sei')], max_length=10)),
                ('acamado', models.CharField(choices=[('Sim', 'Sim'), ('NÃ£o', 'NÃ£o'), ('NÃ£o sei', 'NÃ£o sei')], max_length=10)),
                ('inchaco_dor_juntas', models.CharField(choices=[('Sim', 'Sim'), ('NÃ£o', 'NÃ£o'), ('NÃ£o sei', 'NÃ£o sei')], max_length=10)),
                ('ulcera', models.CharField(choices=[('Sim', 'Sim'), ('NÃ£o', 'NÃ£o'), ('NÃ£o sei', 'NÃ£o sei')], max_length=10)),
                ('figado', models.CharField(choices=[('Sim', 'Sim'), ('NÃ£o', 'NÃ£o'), ('NÃ£o sei', 'NÃ£o sei')], max_length=10)),
                ('tuberculose', models.CharField(choices=[('Sim', 'Sim'), ('NÃ£o', 'NÃ£o'), ('NÃ£o sei', 'NÃ£o sei')], max_length=10)),
                ('sangramento_excessivo', models.CharField(choices=[('Sim', 'Sim'), ('NÃ£o', 'NÃ£o'), ('NÃ£o sei', 'NÃ£o sei')], max_length=10)),
                ('operacao', models.CharField(choices=[('Sim', 'Sim'), ('NÃ£o', 'NÃ£o'), ('NÃ£o sei', 'NÃ£o sei')], max_length=10)),
                ('qual_operacao', models.CharField(blank=True, max_length=20, null=True)),
                ('variacao_peso', models.CharField(choices=[('Aumentou', 'Aumentou'), ('Diminuiu', 'Diminuiu'), ('Sem mudanÃ§as', 'Sem mudanÃ§as')], max_length=15)),
                ('radioterapia', models.CharField(choices=[('Sim', 'Sim'), ('NÃ£o', 'NÃ£o'), ('NÃ£o sei', 'NÃ£o sei')], max_length=10)),
                ('regiao_radioterapia', models.CharField(blank=True, max_length=20, null=True)),
                ('tempo_radioterapia', models.CharField(blank=True, max_length=20, null=True)),
                ('pressao_arterial', models.CharField(choices=[('Alta', 'Alta'), ('Baixa', 'Baixa'), ('Normal', 'Normal')], max_length=10)),
                ('problema_menstruacao', models.CharField(choices=[('Sim', 'Sim'), ('NÃ£o', 'NÃ£o'), ('NÃ£o sei', 'NÃ£o sei')], max_length=10)),
                ('gravida', models.CharField(choices=[('Sim', 'Sim'), ('NÃ£o', 'NÃ£o'), ('NÃ£o sei', 'NÃ£o sei')], max_length=10)),
                ('fumante', models.BooleanField()),
                ('tempo_abandono_tabagismo', models.CharField(blank=True, max_length=20, null=True)),
                ('cigs_dia', models.PositiveIntegerField(blank=True, null=True)),
                ('doenca_infec', models.CharField(choices=[('Sim', 'Sim'), ('NÃ£o', 'NÃ£o'), ('NÃ£o sei', 'NÃ£o sei')], max_length=10)),
                ('qual_doenca_infec', models.CharField(blank=True, max_length=20, null=True)),
                ('drogas_ilicitas', models.BooleanField()),
                ('atendimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_fichas.Atendimento')),
            ],
        ),
        migrations.CreateModel(
            name='Ficha_PPR',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_kennedy_sup', models.TextField()),
                ('tratamento_previo_sup', models.TextField()),
                ('planejamento_protese_sup', models.TextField()),
                ('observacoes_sup', models.TextField()),
                ('class_kennedy_inf', models.TextField()),
                ('tratamento_previo_inf', models.TextField()),
                ('planejamento_protese_inf', models.TextField()),
                ('observacoes_inf', models.TextField()),
                ('atendimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_fichas.Atendimento')),
            ],
        ),
        migrations.CreateModel(
            name='Ficha_Urgencia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('historia_clinica', models.CharField(max_length=60)),
                ('medicamentos', models.CharField(max_length=60)),
                ('motivo', models.CharField(max_length=60)),
                ('diagnostico_provavel', models.CharField(max_length=20)),
                ('atend', models.CharField(choices=[('EstÃ¡gio III', 'EstÃ¡gio III'), ('EstÃ¡gio IV', 'EstÃ¡gio IV'), ('Outro', 'Outro')], max_length=15)),
                ('atend_outro', models.CharField(blank=True, max_length=20, null=True)),
                ('procedimento', models.CharField(max_length=60)),
                ('encaminhamento', models.CharField(blank=True, max_length=60, null=True)),
                ('prescricoes', models.CharField(blank=True, max_length=60, null=True)),
                ('especialidade', models.CharField(choices=[('Endodontia', 'Endodontia'), ('PrÃ³tese', 'PrÃ³tese'), ('Periodontia', 'Periodontia'), ('DentÃ\xadstica', 'DentÃ\xadstica'), ('Cirurgia', 'Cirurgia'), ('Outro', 'Outro')], max_length=15)),
                ('especialidade_outro', models.CharField(blank=True, max_length=20, null=True)),
                ('atendimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_fichas.Atendimento')),
            ],
        ),
        migrations.CreateModel(
            name='Odontograma',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('atendimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_fichas.Atendimento')),
            ],
        ),
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('cpf', models.CharField(max_length=11, primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=200)),
                ('endereco', models.CharField(max_length=200)),
                ('bairro', models.CharField(max_length=200)),
                ('cidade', models.CharField(max_length=200)),
                ('estado', models.CharField(max_length=200)),
                ('cep', models.CharField(blank=True, max_length=9, validators=[django.core.validators.RegexValidator(message="CEP deve estar no formato '64XXX-XXX'.", regex='^(64)\\d{3}-\\d{3}$')])),
                ('tel', models.CharField(blank=True, max_length=11, validators=[django.core.validators.RegexValidator(message="Telefone deve estar no formato '869XXXXXXXX'.", regex='^(86|89)(988|999|998|994|995|981)\\d{6}$')])),
                ('cel', models.CharField(blank=True, max_length=11, validators=[django.core.validators.RegexValidator(message="Telefone deve estar no formato '869XXXXXXXX'.", regex='^(86|89)(988|999|998|994|995|981)\\d{6}$')])),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('estado_civil', models.CharField(max_length=200)),
                ('data_nasc', models.DateTimeField()),
                ('idade', models.CharField(max_length=3)),
                ('cor', models.CharField(max_length=200)),
                ('sexo', models.CharField(choices=[('M', 'M'), ('F', 'F')], max_length=1)),
                ('rg', models.CharField(max_length=8)),
                ('naturalidade', models.CharField(max_length=200)),
                ('nacionalidade', models.CharField(max_length=200)),
                ('profissao_atual', models.CharField(blank=True, max_length=200, null=True)),
                ('profissao_anterior', models.CharField(blank=True, max_length=200, null=True)),
                ('endereco_profissional', models.CharField(blank=True, max_length=200, null=True)),
                ('bairro_profissional', models.CharField(blank=True, max_length=200, null=True)),
                ('cep_profissional', models.CharField(blank=True, max_length=9, null=True, validators=[django.core.validators.RegexValidator(message="CEP deve estar no formato '64XXX-XXX'.", regex='^(64)\\d{3}-\\d{3}$')])),
            ],
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('nome', models.CharField(max_length=50)),
                ('code', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('login', models.CharField(max_length=20)),
                ('senha', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Tipo_Fichas',
            fields=[
                ('code', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Turma',
            fields=[
                ('code', models.CharField(max_length=13, primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Turma_Aluno',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('periodo', models.CharField(max_length=6)),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_fichas.Aluno')),
                ('turma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_fichas.Turma')),
            ],
        ),
        migrations.AddField(
            model_name='turma',
            name='alunos',
            field=models.ManyToManyField(through='sistema_fichas.Turma_Aluno', to='sistema_fichas.Aluno'),
        ),
        migrations.AddField(
            model_name='turma',
            name='fichas',
            field=models.ManyToManyField(to='sistema_fichas.Tipo_Fichas'),
        ),
        migrations.AddField(
            model_name='professor',
            name='turmas',
            field=models.ManyToManyField(to='sistema_fichas.Turma'),
        ),
        migrations.AddField(
            model_name='paciente',
            name='turma_Aluno',
            field=models.ManyToManyField(through='sistema_fichas.Atendimento', to='sistema_fichas.Turma_Aluno'),
        ),
        migrations.AddField(
            model_name='ficha_periodontia',
            name='odontograma',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='sistema_fichas.Odontograma'),
        ),
        migrations.AddField(
            model_name='ficha_ortodontia',
            name='odontograma',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='sistema_fichas.Odontograma'),
        ),
        migrations.AddField(
            model_name='ficha_diagnostico',
            name='odontograma',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, to='sistema_fichas.Odontograma'),
        ),
        migrations.AddField(
            model_name='dados_dentes',
            name='ficha_periodontia',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_fichas.Ficha_Periodontia'),
        ),
        migrations.AddField(
            model_name='atendimento',
            name='paciente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_fichas.Paciente'),
        ),
        migrations.AddField(
            model_name='atendimento',
            name='tipo_ficha',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_fichas.Tipo_Fichas'),
        ),
        migrations.AddField(
            model_name='atendimento',
            name='turma_Aluno',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_fichas.Turma_Aluno'),
        ),
    ]
