# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-09-21 00:20
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Aluno',
            fields=[
                ('matricula', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Atendimento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Dados_Dentes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('letra', models.CharField(max_length=3)),
                ('dente', models.PositiveIntegerField(null=True)),
                ('rec', models.PositiveIntegerField()),
                ('placa', models.BooleanField()),
                ('ps', models.PositiveIntegerField()),
                ('ig', models.BooleanField()),
                ('pic', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Ficha_Dentistica',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('motivo_consulta', models.CharField(blank=True, max_length=20, null=True)),
                ('ultima_consulta', models.CharField(blank=True, max_length=10, null=True)),
                ('escova_dentes', models.CharField(choices=[(b'1x', b'1x'), (b'2x', b'2x'), (b'3x', b'3x')], max_length=20)),
                ('horario_escovacao', models.CharField(blank=True, max_length=20, null=True)),
                ('usa_fio_dental', models.CharField(blank=True, max_length=10, null=True)),
                ('diario_alimentar', models.CharField(blank=True, max_length=30, null=True)),
                ('frequencia_consumo_acucar', models.CharField(choices=[(b'3x ao dia', b'3x ao dia'), (b'5x ao dia', b'5x ao dia'), (b'>5x ao dia', b'>5x ao dia')], max_length=20)),
                ('horario_consumo_acucar', models.CharField(choices=[(b'Junto \xc3\x83\xc2\xa0s refei\xc3\x83\xc2\xa7\xc3\x83\xc2\xb5es', b'Junto \xc3\x83\xc2\xa0s refei\xc3\x83\xc2\xa7\xc3\x83\xc2\xb5es'), (b'Intervalos entre refei\xc3\x83\xc2\xa7\xc3\x83\xc2\xb5es', b'Intervalos entre refei\xc3\x83\xc2\xa7\xc3\x83\xc2\xb5es'), (b'Junto \xc3\x83\xc2\xa0s refei\xc3\x83\xc2\xa7\xc3\x83\xc2\xb5es e nos intervalos das mesmas', b'Junto \xc3\x83\xc2\xa0s refei\xc3\x83\xc2\xa7\xc3\x83\xc2\xb5es e nos intervalos das mesmas')], max_length=20)),
                ('toma_medicamento', models.CharField(blank=True, max_length=20, null=True)),
                ('fluxo_salivar', models.CharField(blank=True, max_length=10, null=True)),
                ('caracteristica_da_placa1', models.CharField(choices=[(b'Flocular e pegajosa', b'Flocular e pegajosa'), (b'Calcificada', b'Calcificada')], max_length=30, null=True)),
                ('caracteristica_da_placa2', models.CharField(choices=[(b'Flocular e pegajosa', b'Flocular e pegajosa'), (b'Calcificada', b'Calcificada')], max_length=30, null=True)),
                ('diag_risco_carie', models.CharField(choices=[(b'Alto', b'Alto'), (b'M\xc3\xa9dio', b'M\xc3\xa9dio'), (b'Baixo', b'Baixo')], max_length=20)),
                ('orientacao', models.BooleanField()),
                ('evidenciacao_de_placa', models.BooleanField()),
                ('profilaxia', models.BooleanField()),
                ('fosfato', models.BooleanField()),
                ('sodio', models.BooleanField()),
                ('fluoreto', models.BooleanField()),
                ('clorexidina', models.BooleanField()),
                ('aquosa_digluconato', models.BooleanField()),
                ('selamento_fissuras', models.CharField(blank=True, max_length=20, null=True)),
                ('remineralizacao_de_lesoes_de_carie', models.CharField(blank=True, max_length=20, null=True)),
                ('outra_medida', models.CharField(blank=True, max_length=20, null=True)),
                ('restauracoes_provisorias', models.CharField(blank=True, max_length=20, null=True)),
                ('tratamento_expectante', models.CharField(blank=True, max_length=20, null=True)),
                ('restauracoes_com_amalgama', models.CharField(blank=True, max_length=20, null=True)),
                ('restauracao_com_resina', models.CharField(blank=True, max_length=20, null=True)),
                ('radiografias', models.CharField(blank=True, max_length=20, null=True)),
                ('observacoes_dentistica', models.CharField(blank=True, max_length=20, null=True)),
                ('encaminhamento_para', models.CharField(blank=True, max_length=20, null=True)),
                ('atendimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_fichas.Atendimento')),
            ],
        ),
        migrations.CreateModel(
            name='Ficha_Diagnostico',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField(auto_now=True)),
                ('motivo', models.CharField(max_length=200)),
                ('historia', models.TextField()),
                ('ultima_consulta', models.DateField(blank=True, null=True)),
                ('frequencia_consultas', models.CharField(max_length=200)),
                ('higiene_propria', models.CharField(max_length=200)),
                ('frequencia_escova', models.PositiveIntegerField()),
                ('dentes_sensiveis', models.BooleanField()),
                ('sangramento_gengiva', models.BooleanField()),
                ('morde_objetos', models.BooleanField()),
                ('mobilidade', models.BooleanField()),
                ('protese', models.BooleanField()),
                ('range_dentes', models.BooleanField()),
                ('dificuldade_abrir', models.BooleanField()),
                ('estalido', models.BooleanField()),
                ('boca_seca', models.BooleanField()),
                ('sol_frequente', models.BooleanField()),
                ('tabagismo', models.BooleanField()),
                ('tipo_tabagismo', models.CharField(blank=True, max_length=200, null=True)),
                ('duracao_tabagismo', models.CharField(blank=True, max_length=200, null=True)),
                ('frequencia_tabagismo', models.CharField(blank=True, max_length=200, null=True)),
                ('tempo_abandono_tabagismo', models.CharField(blank=True, max_length=200, null=True)),
                ('alcool', models.BooleanField()),
                ('frequencia_alcool', models.CharField(blank=True, max_length=200, null=True)),
                ('drogas_ilicitas', models.BooleanField()),
                ('def_drogas_ilicitas', models.CharField(blank=True, max_length=200, null=True)),
                ('tratamento_medico', models.BooleanField()),
                ('def_tratamento_medico', models.CharField(blank=True, max_length=200, null=True)),
                ('medicacao', models.BooleanField()),
                ('def_medicacao', models.CharField(blank=True, max_length=200, null=True)),
                ('doenca_grave', models.BooleanField()),
                ('def_doenca_grave', models.CharField(blank=True, max_length=200, null=True)),
                ('cirurgia', models.BooleanField()),
                ('def_cirurgia', models.CharField(blank=True, max_length=200, null=True)),
                ('anticoncepcional', models.BooleanField()),
                ('gravida', models.BooleanField()),
                ('tempo_gravidez', models.CharField(blank=True, max_length=200, null=True)),
                ('alergia', models.BooleanField()),
                ('def_alergia', models.CharField(blank=True, max_length=200, null=True)),
                ('reacao_medicamento', models.BooleanField()),
                ('def_reacao_medicamento', models.CharField(blank=True, max_length=200, null=True)),
                ('anestesia_dentaria', models.BooleanField()),
                ('reacao_anestesia_dentaria', models.CharField(blank=True, max_length=200, null=True)),
                ('anestesia_geral', models.BooleanField()),
                ('reacao_anestesia_geral', models.CharField(blank=True, max_length=200, null=True)),
                ('disturbios_respiratorios', models.BooleanField()),
                ('disturbios_respiratorios_abaixo', models.CharField(blank=True, choices=[(b'Pneumonia', b'Pneumonia'), (b'Sinusite', b'Sinusite'), (b'Rinite', b'Rinite'), (b'Bronquite', b'Bronquite'), (b'Asma', b'Asma'), (b'Outro', b'Outro')], max_length=15, null=True)),
                ('disturbios_respiratorios_outro', models.CharField(blank=True, max_length=15, null=True)),
                ('hipertenso', models.BooleanField()),
                ('pressao_arterial', models.CharField(blank=True, max_length=200, null=True)),
                ('sangramento_excesso', models.BooleanField()),
                ('palpitacao', models.BooleanField()),
                ('falta_ar', models.BooleanField()),
                ('pes_inchados', models.BooleanField()),
                ('febre_reumatica', models.BooleanField()),
                ('problema_cardiovascular', models.BooleanField()),
                ('def_problema_cardiovascular', models.CharField(blank=True, max_length=200, null=True)),
                ('doencas_transmissiveis', models.BooleanField()),
                ('doencas_transmissiveis_abaixo', models.CharField(blank=True, choices=[(b'Pneumonia', b'Pneumonia'), (b'Sinusite', b'Sinusite'), (b'Rinite', b'Rinite'), (b'Bronquite', b'Bronquite'), (b'Asma', b'Asma'), (b'Outro', b'Outro')], max_length=15, null=True)),
                ('doencas_transmissiveis_hepatite', models.CharField(blank=True, max_length=5, null=True)),
                ('doencas_transmissiveis_outro', models.CharField(blank=True, max_length=15, null=True)),
                ('virus', models.BooleanField()),
                ('def_virus', models.CharField(blank=True, max_length=200, null=True)),
                ('diabetes', models.BooleanField()),
                ('cicatrizacao_demorada', models.BooleanField()),
                ('perda_peso', models.BooleanField()),
                ('aumento_freq_urina', models.BooleanField()),
                ('desmaios', models.BooleanField()),
                ('convulsoes', models.BooleanField()),
                ('epilepsia', models.BooleanField()),
                ('disturbio_sanguineo', models.BooleanField()),
                ('def_disturbio_sanguineo', models.CharField(blank=True, max_length=200, null=True)),
                ('outro_problema', models.BooleanField()),
                ('def_outro_problema', models.CharField(blank=True, max_length=200, null=True)),
                ('face', models.TextField()),
                ('atm', models.TextField()),
                ('m_mastigatorios', models.TextField()),
                ('g_salivares', models.TextField()),
                ('g_linfaticos', models.TextField()),
                ('labios', models.TextField()),
                ('mucosa_j', models.TextField()),
                ('gengiva', models.TextField()),
                ('soalho_boca', models.TextField()),
                ('lingua', models.TextField()),
                ('palato', models.TextField()),
                ('orofaringe', models.TextField()),
                ('percussao', models.TextField()),
                ('exames_complementares', models.TextField()),
                ('necessidade_perio', models.TextField(null=True)),
                ('necessidade_cirurgia', models.TextField(null=True)),
                ('necessidade_endo', models.TextField(null=True)),
                ('necessidade_dentistica', models.TextField(null=True)),
                ('necessidade_protese', models.TextField(null=True)),
                ('disc', models.CharField(choices=[(b'Est\xc3\xa1gio I', b'Est\xc3\xa1gio I'), (b'Est\xc3\xa1gio II', b'Est\xc3\xa1gio II'), (b'Est\xc3\xa1gio III', b'Est\xc3\xa1gio III'), (b'Est\xc3\xa1gioIV', b'Est\xc3\xa1gio IV'), (b'Outro', b'Outro')], max_length=15, null=True)),
                ('disc_outro', models.CharField(blank=True, max_length=20, null=True)),
                ('atendimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_fichas.Atendimento')),
            ],
        ),
        migrations.CreateModel(
            name='Ficha_Endodontia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('em_tratamento_med', models.CharField(choices=[(b'Sim', b'Sim'), (b'N\xc3\x83\xc2\xa3o', b'N\xc3\x83\xc2\xa3o'), (b'N\xc3\x83\xc2\xa3o sei', b'N\xc3\x83\xc2\xa3o sei')], max_length=15)),
                ('quanto_tempo', models.CharField(blank=True, max_length=10, null=True)),
                ('alguma_cirurgia', models.CharField(blank=True, max_length=50, null=True)),
                ('diabetes', models.CharField(choices=[(b'Sim', b'Sim'), (b'N\xc3\x83\xc2\xa3o', b'N\xc3\x83\xc2\xa3o'), (b'N\xc3\x83\xc2\xa3o sei', b'N\xc3\x83\xc2\xa3o sei')], max_length=15)),
                ('febre_reumatica', models.CharField(choices=[(b'Sim', b'Sim'), (b'N\xc3\x83\xc2\xa3o', b'N\xc3\x83\xc2\xa3o'), (b'N\xc3\x83\xc2\xa3o sei', b'N\xc3\x83\xc2\xa3o sei')], max_length=15)),
                ('alteracoes_sanguineas', models.CharField(choices=[(b'Sim', b'Sim'), (b'N\xc3\x83\xc2\xa3o', b'N\xc3\x83\xc2\xa3o'), (b'N\xc3\x83\xc2\xa3o sei', b'N\xc3\x83\xc2\xa3o sei')], max_length=15)),
                ('doencas_cardiovasculares', models.CharField(choices=[(b'Sim', b'Sim'), (b'N\xc3\x83\xc2\xa3o', b'N\xc3\x83\xc2\xa3o'), (b'N\xc3\x83\xc2\xa3o sei', b'N\xc3\x83\xc2\xa3o sei')], max_length=15)),
                ('problemas_hemorragicos', models.CharField(choices=[(b'Sim', b'Sim'), (b'N\xc3\x83\xc2\xa3o', b'N\xc3\x83\xc2\xa3o'), (b'N\xc3\x83\xc2\xa3o sei', b'N\xc3\x83\xc2\xa3o sei')], max_length=15)),
                ('hipertensao', models.CharField(choices=[(b'Sim', b'Sim'), (b'N\xc3\x83\xc2\xa3o', b'N\xc3\x83\xc2\xa3o'), (b'N\xc3\x83\xc2\xa3o sei', b'N\xc3\x83\xc2\xa3o sei')], max_length=15)),
                ('marcapasso', models.CharField(choices=[(b'Sim', b'Sim'), (b'N\xc3\x83\xc2\xa3o', b'N\xc3\x83\xc2\xa3o'), (b'N\xc3\x83\xc2\xa3o sei', b'N\xc3\x83\xc2\xa3o sei')], max_length=15)),
                ('gravida', models.CharField(choices=[(b'Sim', b'Sim'), (b'N\xc3\x83\xc2\xa3o', b'N\xc3\x83\xc2\xa3o'), (b'N\xc3\x83\xc2\xa3o sei', b'N\xc3\x83\xc2\xa3o sei')], max_length=15)),
                ('tempo_gravidez', models.CharField(blank=True, max_length=10, null=True)),
                ('hepatite', models.CharField(choices=[(b'Sim', b'Sim'), (b'N\xc3\x83\xc2\xa3o', b'N\xc3\x83\xc2\xa3o'), (b'N\xc3\x83\xc2\xa3o sei', b'N\xc3\x83\xc2\xa3o sei')], max_length=15)),
                ('tempo_hepatite', models.CharField(blank=True, max_length=10, null=True)),
                ('tipo_hepatite', models.CharField(blank=True, max_length=15, null=True)),
                ('uso_de_medicamento', models.CharField(blank=True, max_length=50, null=True)),
                ('uso_continuo_de_medicamento', models.CharField(blank=True, max_length=50, null=True)),
                ('alergia', models.CharField(choices=[(b'Sim', b'Sim'), (b'N\xc3\x83\xc2\xa3o', b'N\xc3\x83\xc2\xa3o'), (b'N\xc3\x83\xc2\xa3o sei', b'N\xc3\x83\xc2\xa3o sei')], max_length=15)),
                ('outras_informacoes', models.CharField(blank=True, max_length=100, null=True)),
                ('historia_dental', models.CharField(blank=True, max_length=100, null=True)),
                ('caracteristicas_da_dor', models.CharField(blank=True, max_length=60, null=True)),
                ('uso_analgesicos', models.BooleanField()),
                ('uso_antiinflamatorios', models.BooleanField()),
                ('uso_antibiotico', models.BooleanField()),
                ('dente', models.PositiveIntegerField()),
                ('dor_frio', models.BooleanField()),
                ('dor_calor', models.BooleanField()),
                ('dor_percussao_vertical', models.BooleanField()),
                ('dor_percusao_horizontal', models.BooleanField()),
                ('dor_palpacao_apical', models.BooleanField()),
                ('camara_normal', models.BooleanField()),
                ('camara_calcificada', models.BooleanField()),
                ('camara_com_perfuracao', models.BooleanField()),
                ('camara_com_reabsorcao_interna', models.BooleanField()),
                ('canal_amplo', models.BooleanField()),
                ('canal_atresiado', models.BooleanField()),
                ('canal_ja_manipulado', models.BooleanField()),
                ('canal_obturacao_deficiente', models.BooleanField()),
                ('canal_rizogenese_incompleta', models.BooleanField()),
                ('canal_instrumento_fraturado', models.BooleanField()),
                ('canal_fratura_radicular', models.BooleanField()),
                ('canal_sobre_obturacao', models.BooleanField()),
                ('canal_reabsorcao_apical', models.BooleanField()),
                ('canal_reabsorcao_externa', models.BooleanField()),
                ('canal_reabsorcao_interna', models.BooleanField()),
                ('canal_perfuracao', models.BooleanField()),
                ('pericemento_normal', models.BooleanField()),
                ('pericemento_espessado', models.BooleanField()),
                ('pericemento_hipercementose', models.BooleanField()),
                ('periapice_osteite_rarefaciente_difusa', models.BooleanField()),
                ('periapice_osteite_rarefaciente_circunscrita', models.BooleanField()),
                ('diag_clinico_provavel', models.CharField(max_length=100)),
                ('atendimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_fichas.Atendimento')),
            ],
        ),
        migrations.CreateModel(
            name='Ficha_Endodontia_Tabela',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dente1', models.PositiveIntegerField(blank=True, null=True)),
                ('canal1', models.CharField(blank=True, max_length=20, null=True)),
                ('ponto_referencia1', models.CharField(blank=True, max_length=5, null=True)),
                ('cad1', models.PositiveIntegerField(blank=True, null=True)),
                ('ctp1', models.PositiveIntegerField(blank=True, null=True)),
                ('crt1', models.PositiveIntegerField(blank=True, null=True)),
                ('iai1', models.PositiveIntegerField(blank=True, null=True)),
                ('iaf1', models.PositiveIntegerField(blank=True, null=True)),
                ('im1', models.PositiveIntegerField(blank=True, null=True)),
                ('dente2', models.PositiveIntegerField(blank=True, null=True)),
                ('canal2', models.CharField(blank=True, max_length=20, null=True)),
                ('ponto_referencia2', models.CharField(blank=True, max_length=5, null=True)),
                ('cad2', models.PositiveIntegerField(blank=True, null=True)),
                ('ctp2', models.PositiveIntegerField(blank=True, null=True)),
                ('crt2', models.PositiveIntegerField(blank=True, null=True)),
                ('iai2', models.PositiveIntegerField(blank=True, null=True)),
                ('iaf2', models.PositiveIntegerField(blank=True, null=True)),
                ('im2', models.PositiveIntegerField(blank=True, null=True)),
                ('dente3', models.PositiveIntegerField(blank=True, null=True)),
                ('canal3', models.CharField(blank=True, max_length=20, null=True)),
                ('ponto_referencia3', models.CharField(blank=True, max_length=5, null=True)),
                ('cad3', models.PositiveIntegerField(blank=True, null=True)),
                ('ctp3', models.PositiveIntegerField(blank=True, null=True)),
                ('crt3', models.PositiveIntegerField(blank=True, null=True)),
                ('iai3', models.PositiveIntegerField(blank=True, null=True)),
                ('iaf3', models.PositiveIntegerField(blank=True, null=True)),
                ('im3', models.PositiveIntegerField(blank=True, null=True)),
                ('atendimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_fichas.Atendimento')),
            ],
        ),
        migrations.CreateModel(
            name='Ficha_Ortodontia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('queixa', models.CharField(max_length=200)),
                ('cor', models.CharField(choices=[(b'Branca', b'Branca'), (b'Negra', b'Negra'), (b'Amarela', b'Amarela'), (b'Parda', b'Parda')], max_length=10)),
                ('doencas', models.CharField(choices=[(b'N\xc3\xa3o relata', b'N\xc3\xa3o relata'), (b'Habituais', b'Habituais'), (b'Outras', b'Outras')], max_length=10)),
                ('alergias', models.BooleanField()),
                ('def_alergias', models.CharField(blank=True, max_length=20, null=True)),
                ('operacao', models.BooleanField()),
                ('estado_saude', models.CharField(choices=[(b'Bom', b'Bom'), (b'Regular', b'Regular'), (b'Deficiente', b'Deficiente')], max_length=15)),
                ('traumatismo', models.BooleanField()),
                ('data_traumatismo', models.CharField(blank=True, max_length=10, null=True)),
                ('vontade_correcao', models.CharField(choices=[(b'Sim', b'Sim'), (b'N\xc3\xa3o', b'N\xc3\xa3o'), (b'N\xc3\xa3o sabe', b'N\xc3\xa3o sabe')], max_length=15)),
                ('aparelho', models.BooleanField()),
                ('tempo_aparelho', models.CharField(blank=True, max_length=10, null=True)),
                ('observacoes_anamnese', models.TextField()),
                ('psicologico', models.CharField(choices=[(b'Normal', b'Normal'), (b'Extrovertido', b'Extrovertido'), (b'Introvertido', b'Introvertido')], max_length=15)),
                ('simetria_facial', models.BooleanField()),
                ('tipo_facial', models.CharField(choices=[(b'Dolicofacial', b'Dolicofacial'), (b'Mesofacial', b'Mesofacial'), (b'Braquifacial', b'Braquifacial')], max_length=16)),
                ('selamento_labial_frontal', models.BooleanField()),
                ('relacao_ls', models.CharField(choices=[(b'Normal', b'Normal'), (b'Diminu\xc3\xaddo', b'Diminu\xc3\xaddo'), (b'Aumentado', b'Aumentado')], max_length=15)),
                ('espessura', models.CharField(choices=[(b'Normal', b'Normal'), (b'Diminu\xc3\xaddo', b'Diminu\xc3\xaddo'), (b'Aumentado', b'Aumentado')], max_length=15)),
                ('tonicidade_labial', models.CharField(choices=[(b'Normal', b'Normal'), (b'Diminu\xc3\xaddo', b'Diminu\xc3\xaddo'), (b'Aumentado', b'Aumentado')], max_length=15)),
                ('tonicidade_mentoniano', models.CharField(choices=[(b'Normal', b'Normal'), (b'Diminu\xc3\xaddo', b'Diminu\xc3\xaddo'), (b'Aumentado', b'Aumentado')], max_length=15)),
                ('zigomatico_frontal', models.CharField(choices=[(b'Normal', b'Normal'), (b'Diminu\xc3\xaddo', b'Diminu\xc3\xaddo'), (b'Aumentado', b'Aumentado')], max_length=15)),
                ('observacoes_frontal', models.TextField()),
                ('simetria_sorriso', models.BooleanField()),
                ('qtd_gengiva_incisos', models.CharField(choices=[(b'Normal', b'Normal'), (b'Diminu\xc3\xaddo', b'Diminu\xc3\xaddo'), (b'Aumentado', b'Aumentado')], max_length=15)),
                ('corredor_bucal', models.CharField(choices=[(b'Normal', b'Normal'), (b'Diminu\xc3\xaddo', b'Diminu\xc3\xaddo'), (b'Aumentado', b'Aumentado')], max_length=15)),
                ('observacoes_frontal_sorrindo', models.TextField()),
                ('perfil', models.CharField(choices=[(b'Reto', b'Reto'), (b'C\xc3\xb4ncavo', b'C\xc3\xb4ncavo'), (b'Convexo', b'Convexo')], max_length=15)),
                ('dimensao', models.CharField(choices=[(b'1/3 faciais proporcionais', b'1/3 faciais proporcionais'), (b'1/3 inf. aumentado', b'1/3 inf. aumentado'), (b'1/3 inf. diminuido', b'1/3 inf. diminuido')], max_length=30)),
                ('nariz', models.CharField(choices=[(b'Normal', b'Normal'), (b'Pequeno', b'Pequeno'), (b'Grande', b'Grande')], max_length=15)),
                ('selamento_labial_perfil', models.BooleanField()),
                ('maxila', models.CharField(choices=[(b'Normal', b'Normal'), (b'Prostru\xc3\xadda', b'Prostru\xc3\xadda'), (b'Retru\xc3\xadda', b'Retru\xc3\xadda')], max_length=15)),
                ('zigomatico_perfil', models.CharField(choices=[(b'Normal', b'Normal'), (b'Ausente', b'Ausente'), (b'Proeminente', b'Proeminente')], max_length=15)),
                ('angulo_nasolabial', models.CharField(choices=[(b'Normal', b'Normal'), (b'Fechado', b'Fechado'), (b'Aberto', b'Aberto')], max_length=15)),
                ('posicao_labio_superior', models.CharField(choices=[(b'Normal', b'Normal'), (b'Curto', b'Curto'), (b'Longo', b'Longo')], max_length=15)),
                ('posicao_labio_inferior', models.CharField(choices=[(b'Normal', b'Normal'), (b'Evers\xc3\xa3o', b'Evers\xc3\xa3o')], max_length=15)),
                ('mandibula', models.CharField(choices=[(b'Normal', b'Normal'), (b'Prostru\xc3\xadda', b'Prostru\xc3\xadda'), (b'Retru\xc3\xadda', b'Retru\xc3\xadda')], max_length=15)),
                ('qtd_mento', models.CharField(choices=[(b'Normal', b'Normal'), (b'Deficiente', b'Deficiente'), (b'Proeminente', b'Proeminente')], max_length=15)),
                ('sulco_mentolabial', models.CharField(choices=[(b'Normal', b'Normal'), (b'Diminu\xc3\xaddo', b'Diminu\xc3\xaddo'), (b'Aumentado', b'Aumentado')], max_length=15)),
                ('observacoes_perfil', models.TextField()),
                ('respiracao', models.CharField(choices=[(b'Nasal', b'Nasal'), (b'Bucal', b'Bucal'), (b'Naso-Bucal', b'Naso-Bucal')], max_length=15)),
                ('degluticao', models.CharField(choices=[(b'Normal', b'Normal'), (b'At\xc3\xadpica', b'At\xc3\xadpica')], max_length=15)),
                ('fonacao', models.CharField(choices=[(b'Normal', b'Normal'), (b'Atipica', b'At\xc3\xadpica')], max_length=15)),
                ('habitos', models.CharField(choices=[(b'N\xc3\xa3o relata', b'N\xc3\xa3o relata'), (b'Suc\xc3\xa7\xc3\xa3o', b'Suc\xc3\xa7\xc3\xa3o'), (b'Interposi\xc3\xa7\xc3\xa3o labial', b'Interposi\xc3\xa7\xc3\xa3o labial'), (b'Interposi\xc3\xa7\xc3\xa3o', b'Interposi\xc3\xa7\xc3\xa3o'), (b'Onicofagia', b'Onicofagia'), (b'Outros', b'Outros')], max_length=25)),
                ('habitos_outros', models.CharField(max_length=20)),
                ('atm', models.TextField()),
                ('observacoes_funcional', models.TextField()),
                ('dentadura', models.CharField(choices=[(b'Decidua', b'Dec\xc3\x83\xc2\xaddua'), (b'Mista(1o Transit.)', b'Mista(1o Transit.)'), (b'Mista(2o Transit.)', b'Mista(2o Transit.)'), (b'Mista(Intertransit.)', b'Mista(Intertransit.)'), (b'Permanente', b'Permanente'), (b'Arco Tipo I', b'Arco Tipo I'), (b'Arco Tipo II', b'Arco Tipo II')], max_length=25)),
                ('erupcao_dentaria', models.CharField(choices=[(b'Normal', b'Normal'), (b'Precoce', b'Precoce'), (b'Tardia', b'Tardia')], max_length=15)),
                ('arco_superior', models.CharField(choices=[(b'Normal', b'Normal'), (b'Amplo', b'Amplo'), (b'Atr\xc3\x83\xc2\xa9sico', b'Atr\xc3\x83\xc2\xa9sico')], max_length=15)),
                ('arco_inferior', models.CharField(choices=[(b'Normal', b'Normal'), (b'Amplo', b'Amplo'), (b'Atr\xc3\x83\xc2\xa9sico', b'Atr\xc3\x83\xc2\xa9sico')], max_length=15)),
                ('linha_med_sup', models.CharField(choices=[(b'Normal', b'Normal'), (b'Desvio p/ direita', b'Desvio p/ direita'), (b'Desvio p/ esquerda', b'Desvio p/ esquerda')], max_length=20)),
                ('linha_med_inf', models.CharField(choices=[(b'Normal', b'Normal'), (b'Desvio p/ direita', b'Desvio p/ direita'), (b'Desvio p/ esquerda', b'Desvio p/ esquerda')], max_length=20)),
                ('trespasse_horizontal', models.CharField(choices=[(b'Normal', b'Normal'), (b'Aumentado', b'Aumentado'), (b'Negativo', b'Negativo')], max_length=15)),
                ('trespasse_vertical', models.CharField(choices=[(b'Normal', b'Normal'), (b'Aumentado', b'Aumentado'), (b'Topo', b'Topo'), (b'Mordida aberta', b'Mordida aberta'), (b'Dentoalveolar', b'Dentoalveolar'), (b'Esquel\xc3\x83\xc2\xa9tica', b'Esquel\xc3\x83\xc2\xa9tica')], max_length=17)),
                ('mordida_cruzada', models.CharField(choices=[(b'Ausente', b'Ausente'), (b'Anterior', b'Anterior'), (b'Unilateral Verdadeira', b'Unilateral Verdadeira'), (b'Unilateral Funcional', b'Unilateral Funcional'), (b'Bilateral', b'Bilateral'), (b'Localizada', b'Localizada')], max_length=17)),
                ('spee_sup', models.CharField(choices=[(b'Normal', b'Normal'), (b'Acentuada', b'Acentuada')], max_length=15)),
                ('spee_inf', models.CharField(choices=[(b'Normal', b'Normal'), (b'Acentuada', b'Acentuada')], max_length=15)),
                ('relacao_caninos_dir', models.CharField(choices=[(b'Classe I', b'Classe I'), (b'Classe II', b'Classe II'), (b'Classe III', b'Classe III')], max_length=15)),
                ('relacao_caninos_esq', models.CharField(choices=[(b'Classe I', b'Classe I'), (b'Classe II', b'Classe II'), (b'Classe III', b'Classe III')], max_length=15)),
                ('relacao_molares_dir', models.CharField(choices=[(b'Classe I', b'Classe I'), (b'Classe II', b'Classe II'), (b'Classe III', b'Classe III')], max_length=15)),
                ('relacao_molares_esq', models.CharField(choices=[(b'Classe I', b'Classe I'), (b'Classe II', b'Classe II'), (b'Classe III', b'Classe III')], max_length=15)),
                ('angle', models.CharField(choices=[(b'Classe I', b'Classe I'), (b'Classe II, 1a', b'Classe II, 1a'), (b'Classe II, 2a', b'Classe II, 2a'), (b'Classe III', b'Classe III'), (b'Subdiv. direita', b'Subdiv. direita'), (b'Subdiv. esquerda', b'Subdiv. esquerda')], max_length=15)),
                ('andrews', models.CharField(choices=[(b'Classe I', b'Classe I'), (b'Classe II', b'Classe II'), (b'Classe III', b'Classe III'), (b'1/4', b'1/4'), (b'1/2', b'1/2'), (b'3/4', b'3/4'), (b'Total', b'Total')], max_length=15)),
                ('diagnostico', models.CharField(choices=[(b'Oclus\xc3\x83\xc2\xa3o normal', b'Oclus\xc3\x83\xc2\xa3o normal'), (b'M\xc3\x83\xc2\xa1 oclus\xc3\x83\xc2\xa3o', b'M\xc3\x83\xc2\xa1 oclus\xc3\x83\xc2\xa3o')], max_length=20)),
                ('observacoes_oclusal', models.TextField()),
                ('observacoes_odontograma', models.TextField()),
                ('atendimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_fichas.Atendimento')),
            ],
        ),
        migrations.CreateModel(
            name='Ficha_Periodontia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sangramento_gengiva', models.CharField(choices=[(b'Sim', b'Sim'), (b'N\xc3\x83\xc2\xa3o', b'N\xc3\x83\xc2\xa3o'), (b'N\xc3\x83\xc2\xa3o sei', b'N\xc3\x83\xc2\xa3o sei')], max_length=10)),
                ('tratamento_gengiva', models.CharField(choices=[(b'Sim', b'Sim'), (b'N\xc3\x83\xc2\xa3o', b'N\xc3\x83\xc2\xa3o'), (b'N\xc3\x83\xc2\xa3o sei', b'N\xc3\x83\xc2\xa3o sei')], max_length=10)),
                ('hemorragia_extrac_dentes', models.CharField(choices=[(b'Sim', b'Sim'), (b'N\xc3\x83\xc2\xa3o', b'N\xc3\x83\xc2\xa3o'), (b'N\xc3\x83\xc2\xa3o sei', b'N\xc3\x83\xc2\xa3o sei')], max_length=10)),
                ('aparelho_ortodontico', models.BooleanField()),
                ('alergia_anestesia', models.CharField(choices=[(b'Sim', b'Sim'), (b'N\xc3\x83\xc2\xa3o', b'N\xc3\x83\xc2\xa3o'), (b'N\xc3\x83\xc2\xa3o sei', b'N\xc3\x83\xc2\xa3o sei')], max_length=10)),
                ('alergia_antibioticos', models.CharField(choices=[(b'Sim', b'Sim'), (b'N\xc3\x83\xc2\xa3o', b'N\xc3\x83\xc2\xa3o'), (b'N\xc3\x83\xc2\xa3o sei', b'N\xc3\x83\xc2\xa3o sei')], max_length=10)),
                ('alergia_sulfas', models.CharField(choices=[(b'Sim', b'Sim'), (b'N\xc3\x83\xc2\xa3o', b'N\xc3\x83\xc2\xa3o'), (b'N\xc3\x83\xc2\xa3o sei', b'N\xc3\x83\xc2\xa3o sei')], max_length=10)),
                ('alergia_aspirina', models.CharField(choices=[(b'Sim', b'Sim'), (b'N\xc3\x83\xc2\xa3o', b'N\xc3\x83\xc2\xa3o'), (b'N\xc3\x83\xc2\xa3o sei', b'N\xc3\x83\xc2\xa3o sei')], max_length=10)),
                ('alergia_outros', models.CharField(blank=True, max_length=20, null=True)),
                ('alergia_nao_medicamentos', models.CharField(choices=[(b'Sim', b'Sim'), (b'N\xc3\x83\xc2\xa3o', b'N\xc3\x83\xc2\xa3o'), (b'N\xc3\x83\xc2\xa3o sei', b'N\xc3\x83\xc2\xa3o sei')], max_length=10)),
                ('quais_alergias', models.CharField(blank=True, max_length=20, null=True)),
                ('cuidados_medicos', models.BooleanField()),
                ('motivo_cuidados_medicos', models.CharField(blank=True, max_length=20, null=True)),
                ('medicamentos', models.BooleanField()),
                ('quais_medicamentos', models.CharField(blank=True, max_length=20, null=True)),
                ('febre_reumatica', models.CharField(choices=[(b'Sim', b'Sim'), (b'N\xc3\x83\xc2\xa3o', b'N\xc3\x83\xc2\xa3o'), (b'N\xc3\x83\xc2\xa3o sei', b'N\xc3\x83\xc2\xa3o sei')], max_length=10)),
                ('doencas_cardiovasculares', models.CharField(choices=[(b'Sim', b'Sim'), (b'N\xc3\x83\xc2\xa3o', b'N\xc3\x83\xc2\xa3o'), (b'N\xc3\x83\xc2\xa3o sei', b'N\xc3\x83\xc2\xa3o sei')], max_length=10)),
                ('diabetes', models.CharField(choices=[(b'Sim', b'Sim'), (b'N\xc3\x83\xc2\xa3o', b'N\xc3\x83\xc2\xa3o'), (b'N\xc3\x83\xc2\xa3o sei', b'N\xc3\x83\xc2\xa3o sei')], max_length=10)),
                ('tonturas', models.CharField(choices=[(b'Sim', b'Sim'), (b'N\xc3\x83\xc2\xa3o', b'N\xc3\x83\xc2\xa3o'), (b'N\xc3\x83\xc2\xa3o sei', b'N\xc3\x83\xc2\xa3o sei')], max_length=10)),
                ('anemia', models.CharField(choices=[(b'Sim', b'Sim'), (b'N\xc3\x83\xc2\xa3o', b'N\xc3\x83\xc2\xa3o'), (b'N\xc3\x83\xc2\xa3o sei', b'N\xc3\x83\xc2\xa3o sei')], max_length=10)),
                ('acamado', models.CharField(choices=[(b'Sim', b'Sim'), (b'N\xc3\x83\xc2\xa3o', b'N\xc3\x83\xc2\xa3o'), (b'N\xc3\x83\xc2\xa3o sei', b'N\xc3\x83\xc2\xa3o sei')], max_length=10)),
                ('inchaco_dor_juntas', models.CharField(choices=[(b'Sim', b'Sim'), (b'N\xc3\x83\xc2\xa3o', b'N\xc3\x83\xc2\xa3o'), (b'N\xc3\x83\xc2\xa3o sei', b'N\xc3\x83\xc2\xa3o sei')], max_length=10)),
                ('ulcera', models.CharField(choices=[(b'Sim', b'Sim'), (b'N\xc3\x83\xc2\xa3o', b'N\xc3\x83\xc2\xa3o'), (b'N\xc3\x83\xc2\xa3o sei', b'N\xc3\x83\xc2\xa3o sei')], max_length=10)),
                ('figado', models.CharField(choices=[(b'Sim', b'Sim'), (b'N\xc3\x83\xc2\xa3o', b'N\xc3\x83\xc2\xa3o'), (b'N\xc3\x83\xc2\xa3o sei', b'N\xc3\x83\xc2\xa3o sei')], max_length=10)),
                ('tuberculose', models.CharField(choices=[(b'Sim', b'Sim'), (b'N\xc3\x83\xc2\xa3o', b'N\xc3\x83\xc2\xa3o'), (b'N\xc3\x83\xc2\xa3o sei', b'N\xc3\x83\xc2\xa3o sei')], max_length=10)),
                ('sangramento_excessivo', models.CharField(choices=[(b'Sim', b'Sim'), (b'N\xc3\x83\xc2\xa3o', b'N\xc3\x83\xc2\xa3o'), (b'N\xc3\x83\xc2\xa3o sei', b'N\xc3\x83\xc2\xa3o sei')], max_length=10)),
                ('operacao', models.CharField(choices=[(b'Sim', b'Sim'), (b'N\xc3\x83\xc2\xa3o', b'N\xc3\x83\xc2\xa3o'), (b'N\xc3\x83\xc2\xa3o sei', b'N\xc3\x83\xc2\xa3o sei')], max_length=10)),
                ('qual_operacao', models.CharField(blank=True, max_length=20, null=True)),
                ('variacao_peso', models.CharField(choices=[(b'Aumentou', b'Aumentou'), (b'Diminuiu', b'Diminuiu'), (b'Sem mudan\xc3\x83\xc2\xa7as', b'Sem mudan\xc3\x83\xc2\xa7as')], max_length=15)),
                ('radioterapia', models.CharField(choices=[(b'Sim', b'Sim'), (b'N\xc3\x83\xc2\xa3o', b'N\xc3\x83\xc2\xa3o'), (b'N\xc3\x83\xc2\xa3o sei', b'N\xc3\x83\xc2\xa3o sei')], max_length=10)),
                ('regiao_radioterapia', models.CharField(blank=True, max_length=20, null=True)),
                ('tempo_radioterapia', models.CharField(blank=True, max_length=20, null=True)),
                ('pressao_arterial', models.CharField(choices=[(b'Alta', b'Alta'), (b'Baixa', b'Baixa'), (b'Normal', b'Normal')], max_length=10)),
                ('problema_menstruacao', models.CharField(choices=[(b'Sim', b'Sim'), (b'N\xc3\x83\xc2\xa3o', b'N\xc3\x83\xc2\xa3o'), (b'N\xc3\x83\xc2\xa3o sei', b'N\xc3\x83\xc2\xa3o sei')], max_length=10)),
                ('gravida', models.CharField(choices=[(b'Sim', b'Sim'), (b'N\xc3\x83\xc2\xa3o', b'N\xc3\x83\xc2\xa3o'), (b'N\xc3\x83\xc2\xa3o sei', b'N\xc3\x83\xc2\xa3o sei')], max_length=10)),
                ('fumante', models.BooleanField()),
                ('tempo_abandono_tabagismo', models.CharField(blank=True, max_length=20, null=True)),
                ('cigs_dia', models.PositiveIntegerField(blank=True, null=True)),
                ('doenca_infec', models.CharField(choices=[(b'Sim', b'Sim'), (b'N\xc3\x83\xc2\xa3o', b'N\xc3\x83\xc2\xa3o'), (b'N\xc3\x83\xc2\xa3o sei', b'N\xc3\x83\xc2\xa3o sei')], max_length=10)),
                ('qual_doenca_infec', models.CharField(blank=True, max_length=20, null=True)),
                ('drogas_ilicitas', models.BooleanField()),
                ('atendimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_fichas.Atendimento')),
            ],
        ),
        migrations.CreateModel(
            name='Ficha_PPR',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_kennedy_sup', models.TextField()),
                ('tratamento_previo_sup', models.TextField()),
                ('planejamento_protese_sup', models.TextField()),
                ('observacoes_sup', models.TextField()),
                ('class_kennedy_inf', models.TextField()),
                ('tratamento_previo_inf', models.TextField()),
                ('planejamento_protese_inf', models.TextField()),
                ('observacoes_inf', models.TextField()),
                ('atendimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_fichas.Atendimento')),
            ],
        ),
        migrations.CreateModel(
            name='Ficha_Urgencia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('historia_clinica', models.CharField(max_length=60)),
                ('medicamentos', models.CharField(max_length=60)),
                ('motivo', models.CharField(max_length=60)),
                ('diagnostico_provavel', models.CharField(max_length=20)),
                ('atend', models.CharField(choices=[(b'Est\xc3\x83\xc2\xa1gio III', b'Est\xc3\x83\xc2\xa1gio III'), (b'Est\xc3\x83\xc2\xa1gio IV', b'Est\xc3\x83\xc2\xa1gio IV'), (b'Outro', b'Outro')], max_length=15)),
                ('atend_outro', models.CharField(blank=True, max_length=20, null=True)),
                ('procedimento', models.CharField(max_length=60)),
                ('encaminhamento', models.CharField(blank=True, max_length=60, null=True)),
                ('prescricoes', models.CharField(blank=True, max_length=60, null=True)),
                ('especialidade', models.CharField(choices=[(b'Endodontia', b'Endodontia'), (b'Pr\xc3\x83\xc2\xb3tese', b'Pr\xc3\x83\xc2\xb3tese'), (b'Periodontia', b'Periodontia'), (b'Dent\xc3\x83\xc2\xadstica', b'Dent\xc3\x83\xc2\xadstica'), (b'Cirurgia', b'Cirurgia'), (b'Outro', b'Outro')], max_length=15)),
                ('especialidade_outro', models.CharField(blank=True, max_length=20, null=True)),
                ('atendimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_fichas.Atendimento')),
            ],
        ),
        migrations.CreateModel(
            name='Odontograma',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pontos', models.TextField(blank=True)),
                ('atendimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_fichas.Atendimento')),
            ],
        ),
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('cpf', models.CharField(max_length=11, primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=200)),
                ('endereco', models.CharField(max_length=200)),
                ('bairro', models.CharField(max_length=200)),
                ('cidade', models.CharField(max_length=200)),
                ('estado', models.CharField(max_length=200)),
                ('cep', models.CharField(blank=True, max_length=9)),
                ('tel', models.CharField(blank=True, max_length=11)),
                ('cel', models.CharField(blank=True, max_length=11)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('estado_civil', models.CharField(max_length=200)),
                ('data_nasc', models.DateField()),
                ('idade', models.CharField(max_length=3)),
                ('cor', models.CharField(max_length=200)),
                ('sexo', models.CharField(choices=[(b'M', b'M'), (b'F', b'F')], max_length=1)),
                ('rg', models.CharField(max_length=8)),
                ('naturalidade', models.CharField(max_length=200)),
                ('nacionalidade', models.CharField(max_length=200)),
                ('profissao_atual', models.CharField(blank=True, max_length=200, null=True)),
                ('profissao_anterior', models.CharField(blank=True, max_length=200, null=True)),
                ('endereco_profissional', models.CharField(blank=True, max_length=200, null=True)),
                ('bairro_profissional', models.CharField(blank=True, max_length=200, null=True)),
                ('cep_profissional', models.CharField(blank=True, max_length=9, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('nome', models.CharField(max_length=50)),
                ('codigo', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('login', models.CharField(max_length=20)),
                ('senha', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Tipo_Ficha',
            fields=[
                ('codigo', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Turma',
            fields=[
                ('codigo', models.CharField(max_length=13, primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Turma_Aluno',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('periodo', models.CharField(max_length=6)),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_fichas.Aluno')),
                ('turma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_fichas.Turma')),
            ],
        ),
        migrations.AddField(
            model_name='turma',
            name='alunos',
            field=models.ManyToManyField(through='sistema_fichas.Turma_Aluno', to='sistema_fichas.Aluno'),
        ),
        migrations.AddField(
            model_name='tipo_ficha',
            name='turma',
            field=models.ManyToManyField(to='sistema_fichas.Turma'),
        ),
        migrations.AddField(
            model_name='professor',
            name='turmas',
            field=models.ManyToManyField(to='sistema_fichas.Turma'),
        ),
        migrations.AddField(
            model_name='paciente',
            name='turma_aluno',
            field=models.ManyToManyField(through='sistema_fichas.Atendimento', to='sistema_fichas.Turma_Aluno'),
        ),
        migrations.AddField(
            model_name='ficha_periodontia',
            name='odontograma',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='sistema_fichas.Odontograma'),
        ),
        migrations.AddField(
            model_name='ficha_ortodontia',
            name='odontograma',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='sistema_fichas.Odontograma'),
        ),
        migrations.AddField(
            model_name='ficha_diagnostico',
            name='odontograma',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, to='sistema_fichas.Odontograma'),
        ),
        migrations.AddField(
            model_name='dados_dentes',
            name='ficha_periodontia',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_fichas.Ficha_Periodontia'),
        ),
        migrations.AddField(
            model_name='atendimento',
            name='paciente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_fichas.Paciente'),
        ),
        migrations.AddField(
            model_name='atendimento',
            name='tipo_ficha',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_fichas.Tipo_Ficha'),
        ),
        migrations.AddField(
            model_name='atendimento',
            name='turma_aluno',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_fichas.Turma_Aluno'),
        ),
    ]
