# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-08-28 21:13
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Aluno',
            fields=[
                ('nome', models.CharField(max_length=50)),
                ('matricula', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('login', models.CharField(max_length=20)),
                ('senha', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Atendimento',
            fields=[
                ('data', models.DateTimeField(default=django.utils.timezone.now)),
                ('code', models.CharField(max_length=7, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Ficha_Diagnostico',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateTimeField(default=django.utils.timezone.now)),
                ('motivo', models.CharField(max_length=200)),
                ('historia', models.TextField()),
                ('ultima_consulta', models.DateTimeField(blank=True, null=True)),
                ('frequencia_consultas', models.CharField(max_length=200)),
                ('higiene_propria', models.CharField(max_length=200)),
                ('frequencia_escova', models.PositiveIntegerField()),
                ('dentes_sensiveis', models.BooleanField()),
                ('sangramento_gengiva', models.BooleanField()),
                ('morde_objetos', models.BooleanField()),
                ('mobilidade', models.BooleanField()),
                ('protese', models.BooleanField()),
                ('range_dentes', models.BooleanField()),
                ('dificuldade_abrir', models.BooleanField()),
                ('estalido', models.BooleanField()),
                ('boca_seca', models.BooleanField()),
                ('sol_frequente', models.BooleanField()),
                ('tabagismo', models.BooleanField()),
                ('tipo_tabagismo', models.CharField(blank=True, max_length=200, null=True)),
                ('duracao_tabagismo', models.CharField(blank=True, max_length=200, null=True)),
                ('frequencia_tabagismo', models.CharField(blank=True, max_length=200, null=True)),
                ('tempo_abandono_tabagismo', models.CharField(blank=True, max_length=200, null=True)),
                ('alcool', models.BooleanField()),
                ('frequencia_alcool', models.CharField(blank=True, max_length=200, null=True)),
                ('drogas_ilicitas', models.BooleanField()),
                ('def_drogas_ilicitas', models.CharField(blank=True, max_length=200, null=True)),
                ('tratamento_medico', models.BooleanField()),
                ('def_tratamento_medico', models.CharField(blank=True, max_length=200, null=True)),
                ('medicacao', models.BooleanField()),
                ('def_medicacao', models.CharField(blank=True, max_length=200, null=True)),
                ('doenca_grave', models.BooleanField()),
                ('def_doenca_grave', models.CharField(blank=True, max_length=200, null=True)),
                ('cirurgia', models.BooleanField()),
                ('def_cirurgia', models.CharField(blank=True, max_length=200, null=True)),
                ('anticoncepcional', models.BooleanField()),
                ('gravida', models.BooleanField()),
                ('tempo_gravidez', models.CharField(blank=True, max_length=200, null=True)),
                ('alergia', models.BooleanField()),
                ('def_alergia', models.CharField(blank=True, max_length=200, null=True)),
                ('reacao_medicamento', models.BooleanField()),
                ('def_reacao_medicamento', models.CharField(blank=True, max_length=200, null=True)),
                ('anestesia_dentaria', models.BooleanField()),
                ('reacao_anestesia_dentaria', models.CharField(blank=True, max_length=200, null=True)),
                ('anestesia_geral', models.BooleanField()),
                ('reacao_anestesia_geral', models.CharField(blank=True, max_length=200, null=True)),
                ('disturbios_respiratorios', models.BooleanField()),
                ('disturbios_respiratorios_abaixo', models.CharField(blank=True, choices=[('Pneumonia', 'Pneumonia'), ('Sinusite', 'Sinusite'), ('Rinite', 'Rinite'), ('Bronquite', 'Bronquite'), ('Asma', 'Asma'), ('Outro', 'Outro')], max_length=15, null=True)),
                ('disturbios_respiratorios_outro', models.CharField(blank=True, max_length=15, null=True)),
                ('hipertenso', models.BooleanField()),
                ('pressao_arterial', models.CharField(blank=True, max_length=200, null=True)),
                ('sangramento_excesso', models.BooleanField()),
                ('palpitacao', models.BooleanField()),
                ('falta_ar', models.BooleanField()),
                ('pes_inchados', models.BooleanField()),
                ('febre_reumatica', models.BooleanField()),
                ('problema_cardiovascular', models.BooleanField()),
                ('def_problema_cardiovascular', models.CharField(blank=True, max_length=200, null=True)),
                ('doencas_transmissiveis', models.BooleanField()),
                ('doencas_transmissiveis_abaixo', models.CharField(blank=True, choices=[('Pneumonia', 'Pneumonia'), ('Sinusite', 'Sinusite'), ('Rinite', 'Rinite'), ('Bronquite', 'Bronquite'), ('Asma', 'Asma'), ('Outro', 'Outro')], max_length=15, null=True)),
                ('doencas_transmissiveis_hepatite', models.CharField(blank=True, max_length=5, null=True)),
                ('doencas_transmissiveis_outro', models.CharField(blank=True, max_length=15, null=True)),
                ('virus', models.BooleanField()),
                ('def_virus', models.CharField(blank=True, max_length=200, null=True)),
                ('diabetes', models.BooleanField()),
                ('cicatrizacao_demorada', models.BooleanField()),
                ('perda_peso', models.BooleanField()),
                ('aumento_freq_urina', models.BooleanField()),
                ('desmaios', models.BooleanField()),
                ('convulsoes', models.BooleanField()),
                ('epilepsia', models.BooleanField()),
                ('disturbio_sanguineo', models.BooleanField()),
                ('def_disturbio_sanguineo', models.CharField(blank=True, max_length=200, null=True)),
                ('outro_problema', models.BooleanField()),
                ('def_outro_problema', models.CharField(blank=True, max_length=200, null=True)),
                ('face', models.TextField()),
                ('atm', models.TextField()),
                ('m_mastigatorios', models.TextField()),
                ('g_salivares', models.TextField()),
                ('g_linfaticos', models.TextField()),
                ('labios', models.TextField()),
                ('mucosa_j', models.TextField()),
                ('soalho_boca', models.TextField()),
                ('lingua', models.TextField()),
                ('palato', models.TextField()),
                ('orofaringe', models.TextField()),
                ('percussao', models.TextField()),
                ('exames_complementares', models.TextField()),
                ('atendimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_fichas.Atendimento')),
            ],
        ),
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('cpf', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=200)),
                ('endereco', models.CharField(max_length=200)),
                ('bairro', models.CharField(max_length=200)),
                ('cidade', models.CharField(max_length=200)),
                ('estado', models.CharField(max_length=200)),
                ('cep', models.PositiveIntegerField()),
                ('tel', models.PositiveIntegerField()),
                ('cel', models.PositiveIntegerField()),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('estado_civil', models.CharField(max_length=200)),
                ('data_nasc', models.DateTimeField()),
                ('idade', models.PositiveIntegerField()),
                ('cor', models.CharField(max_length=200)),
                ('sexo', models.CharField(choices=[('M', 'M'), ('F', 'F')], max_length=1)),
                ('rg', models.PositiveIntegerField()),
                ('naturalidade', models.CharField(max_length=200)),
                ('nacionalidade', models.CharField(max_length=200)),
                ('profissao_atual', models.CharField(blank=True, max_length=200, null=True)),
                ('profissao_anterior', models.CharField(blank=True, max_length=200, null=True)),
                ('endereco_profissional', models.CharField(blank=True, max_length=200, null=True)),
                ('bairro_profissional', models.CharField(blank=True, max_length=200, null=True)),
                ('cep_profissional', models.PositiveIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('nome', models.CharField(max_length=50)),
                ('code', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('login', models.CharField(max_length=20)),
                ('senha', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Tipo_Fichas',
            fields=[
                ('code', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Turma',
            fields=[
                ('code', models.CharField(max_length=7, primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Turma_Aluno',
            fields=[
                ('code', models.CharField(max_length=7, primary_key=True, serialize=False)),
                ('periodo', models.CharField(max_length=6)),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_fichas.Aluno')),
                ('turma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_fichas.Turma')),
            ],
        ),
        migrations.AddField(
            model_name='turma',
            name='alunos',
            field=models.ManyToManyField(through='sistema_fichas.Turma_Aluno', to='sistema_fichas.Aluno'),
        ),
        migrations.AddField(
            model_name='turma',
            name='fichas',
            field=models.ManyToManyField(to='sistema_fichas.Tipo_Fichas'),
        ),
        migrations.AddField(
            model_name='professor',
            name='turmas',
            field=models.ManyToManyField(to='sistema_fichas.Turma'),
        ),
        migrations.AddField(
            model_name='paciente',
            name='turma_Aluno',
            field=models.ManyToManyField(through='sistema_fichas.Atendimento', to='sistema_fichas.Turma_Aluno'),
        ),
        migrations.AddField(
            model_name='atendimento',
            name='paciente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_fichas.Paciente'),
        ),
        migrations.AddField(
            model_name='atendimento',
            name='tipo_ficha',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_fichas.Tipo_Fichas'),
        ),
        migrations.AddField(
            model_name='atendimento',
            name='turma_Aluno',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_fichas.Turma_Aluno'),
        ),
    ]
